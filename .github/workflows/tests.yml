name: tests

on:
  push:
    branches:
      - main
  pull_request: null

env:
  PY_COLORS: "1"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    name: tests
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v3
        with:
          fetch-depth: 0

      - uses: conda-incubator/setup-miniconda@a4260408e20b96e80095f42ff7f1a15b27dd94ca # v2
        with:
          channels: conda-forge,defaults
          channel-priority: strict
          show-channel-urls: true
          miniforge-version: latest
          miniforge-variant: Mambaforge
          python-version: 3.11
          use-mamba: true

      - name: configure conda and install code
        shell: bash -l {0}
        run: |
          mamba install --yes --file=requirements.txt
          mamba install --yes pytest flake8 flaky pip python-build setuptools_scm>=7 setuptools>=45 toml
          pip install -e .

      - name: test versions
        shell: bash -el {0}
        run: |
          pip uninstall conda-forge-feedstock-check-solvable --yes
          [[ $(python setup.py --version) != "0.0.0" ]] || exit 1

          rm -rf dist/*
          python setup.py sdist
          pip install --no-deps --no-build-isolation dist/*.tar.gz
          pushd ..
          python -c "import conda_forge_feedstock_check_solvable; assert conda_forge_feedstock_check_solvable.__version__ != '0.0.0'"
          popd
          pip uninstall conda-forge-feedstock-check-solvable --yes

          rm -rf dist/*
          python -m build --sdist . --outdir dist
          pip install --no-deps --no-build-isolation dist/*.tar.gz
          pushd ..
          python -c "import conda_forge_feedstock_check_solvable; assert conda_forge_feedstock_check_solvable.__version__ != '0.0.0'"
          popd
          pip uninstall conda-forge-feedstock-check-solvable --yes

          python -m pip install -v --no-deps --no-build-isolation -e .

      - name: test
        shell: bash -l {0}
        run: |
          pytest -vvs --durations=0 tests
